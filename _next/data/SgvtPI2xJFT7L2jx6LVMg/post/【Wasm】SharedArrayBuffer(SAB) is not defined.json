{"pageProps":{"post":{"id":19,"title":"【Wasm】SharedArrayBuffer(SAB) is not defined","created_at":"2024-11-18T10:16:31Z","updated_at":"2024-11-18T10:16:46Z","content":"### 背景\r\n\r\nSharedArrayBuffer 是 JavaScript 中一种特殊的对象类型，用于在多个 Web Workers 或主线程之间共享内存。它与普通的 ArrayBuffer\r\n类似，但 可以在多个线程中同时访问和修改。这种功能对于需要高性能并发处理的场景非常有用，比如实时数据处理、游戏开发、音视频处理等。\r\n\r\n> 2017.7月（Chrome 60）引入 SharedArrayBuffer。\r\n>\r\n> 2021.7月（Chrome 92）限制 SharedArrayBuffer 只能在 cross-origin isolated 页面使用。（Spectre 漏洞）\r\n\r\n### 解决方案\r\n\r\n##### 一、不启用 SharedArrayBuffer\r\n\r\n##### 二、 在 HTTP 响应头中添加以下两个安全标头：\r\n\r\n1. Cross-Origin-Opener-Policy (COOP):\r\n    - 将页面与其他来源的窗口隔离开来。\r\n    - 推荐值：same-origin。\r\n2. Cross-Origin-Embedder-Policy (COEP):\r\n    - 确保页面中加载的资源具备同源性或具有适当的跨源授权。\r\n    - 推荐值：require-corp。\r\n\r\n示例配置：\r\n\r\n```\r\nCross-Origin-Opener-Policy: same-origin\r\nCross-Origin-Embedder-Policy: require-corp\r\n```\r\n\r\n##### 三、Chrome Origin Trials\r\n\r\n申请地址：[Trial for SharedArrayBuffers in non-isolated pages on Desktop platforms](https://developer.chrome.com/origintrials/#/view_trial/303992974847508481)\r\n\r\n### 参考资料\r\n\r\n- [关于 SharedArrayBuffer spectre 攻击的讨论](https://github.com/tc39/security/issues/3)\r\n- [使用 SharedArrayBuffer 进行 Spectre 攻击的原理](https://www.giantbranch.cn/2018/01/09/腾讯玄武实验室检测浏览器spectre的原理)\r\n- [使用 COOP 和 COEP 将网站设置为“跨源隔离”](https://web.dev/articles/coop-coep?hl=zh-cn)\r\n- [A year with Spectre: a V8 perspective](https://v8.dev/blog/spectre)\r\n","author":"z0ffy","reactions":{"url":"https://api.github.com/repos/z0ffy/z0ffy.github.io/issues/19/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"labels":["published","前端"]}},"__N_SSG":true}