{"pageProps":{"post":{"id":14,"title":"获取视频时刻图","created_at":"2024-10-28T08:58:43Z","updated_at":"2024-10-28T08:58:48Z","content":"> 在获取视频任意时刻的截图时，通常大多数的做法都是\r\n> - 通过视频播放，canvas绘制\r\n> - 借助ffmpeg\r\n> \r\n> 除此之外，还有另外一种方式：URI Queries\r\n\r\n### 使用方式\r\n\r\n只需要在url后面带上#t=xx（秒）即可，如果是本地文件的话，上传之后需要拿到blobUrl\r\n\r\n```html\r\n<!-- 网络地址 -->\r\n<div>\r\n  <video src=\"https://www.w3school.com.cn/i/video/shanghai.mp4#t=1.2\"></video>\r\n  <video src=\"https://www.w3school.com.cn/i/video/shanghai.mp4#t=2.2\"></video>\r\n  <video src=\"https://www.w3school.com.cn/i/video/shanghai.mp4#t=3.5\"></video>\r\n</div>\r\n\r\n<!-- 本地地址 -->\r\n<div>\r\n  <video src=\"blob:file:///123a3041-4ab9-4db8-adb7-56c46f3b156e#t=1.2\"></video>\r\n  <video src=\"blob:file:///123a3041-4ab9-4db8-adb7-56c46f3b156e#t=2.2\"></video>\r\n  <video src=\"blob:file:///123a3041-4ab9-4db8-adb7-56c46f3b156e#t=3.5\"></video>\r\n</div>\r\n\r\n<!-- 获取blob url -->\r\n<script>\r\n  fetch('https://www.w3school.com.cn/i/video/shanghai.mp4').then(res => res.blob()).then(blob => {\r\n    const blobUrl = URL.createObjectURL(blob);\r\n    console.log(blobUrl);\r\n  })\r\n</script>\r\n```\r\n\r\n到此就可以渲染出指定时刻的图片。就这？是的，没错，就这。\r\n\r\n### 优点\r\n\r\n- 快\r\n- 简单\r\n\r\n### 缺点\r\n\r\n- 每一张图实际是一个video，会导致资源重复请求，视频文件过大，图片过多，网络压力较大。\r\n- 请求网络地址进而转换成本地地址，虽然可以解决并发导致的网络压力，但是如果文件过大，首次加载依旧需要消耗比较长的时间。\r\n\r\n### 总结\r\n\r\n具体使用什么方式，还需根据业务需求决定。\r\n\r\n> 参考文档：https://www.w3.org/TR/media-frags/#media-fragment-syntax\r\n","author":"z0ffy","reactions":{"url":"https://api.github.com/repos/z0ffy/z0ffy.github.io/issues/14/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"labels":["published","前端"]}},"__N_SSG":true}