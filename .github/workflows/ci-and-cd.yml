# eslint-disable max-len
name: ci-and-cd

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  issues:
    types:
      - opened
      - reopened
      - closed
      - deleted
      - labeled
      - edited
    # trigger by `published` label
    labels:
      - published
  # eslint-disable-next-line yml/no-empty-mapping-value
  workflow_dispatch:

jobs:
#  lint:
#
#    if: (github.event_name == 'workflow_dispatch' || github.event_name == 'push' || github.event_name == 'pull_request' || contains(github.event.issue.labels.*.name, 'published')) && !contains(github.event.head_commit.message, 'chore')
#    strategy:
#      matrix:
#        os: [ubuntu-latest]
#        node-version: [20.x]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v4
#
#      - uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#
#      - name: Cache ~/.pnpm-store
#        uses: actions/cache@v3
#        env:
#          cache-name: cache-pnpm-store
#        with:
#          path: ~/.pnpm-store
#
#          key: ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
#          restore-keys: |
#            ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-
#            ${{ runner.os }}-${{ matrix.node-version }}-test-
#            ${{ runner.os }}-
#      - name: Install pnpm
#        run: npm i -g pnpm
#
#      - name: Install deps
#        run: pnpm i --no-frozen-lockfile
#
#      - name: Run lint
#        run: pnpm run lint

  deploy-to-gh-page:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
#    needs:
#      - lint
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache ~/.pnpm-store
        uses: actions/cache@v3
        env:
          cache-name: cache-pnpm-store
        with:
          path: ~/.pnpm-store

          key: ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-test-
            ${{ runner.os }}-
      - name: Install pnpm
        run: npm i -g pnpm

      - name: Install deps
        run: pnpm i --no-frozen-lockfile

      - name: Run build
        run: pnpm run build
        env:
          DEPLOY_TARGET: gh-pages
          OWNER: ${{ github.actor }}
          REPO: ${{ github.event.repository.name }}

      - name: Run deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
