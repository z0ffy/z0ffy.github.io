{"pageProps":{"user":{"login":"z0ffy","nick_name":"zoffy","avatar_url":"https://avatars.githubusercontent.com/u/30621502?v=4","bio":"No fear of words, no fear of years."},"posts":[{"id":14,"title":"获取视频时刻图","created_at":"2024-10-28T08:58:43Z","updated_at":"2024-10-28T08:58:48Z","content":"> 在获取视频任意时刻的截图时，通常大多数的做法都是\r\n> - 通过视频播放，canvas绘制\r\n> - 借助ffmpeg\r\n> \r\n> 除此之外，还有另外一种方式：URI Queries\r\n\r\n### 使用方式\r\n\r\n只需要在url后面带上#t=xx（秒）即可，如果是本地文件的话，上传之后需要拿到blobUrl\r\n\r\n```html\r\n<!-- 网络地址 -->\r\n<div>\r\n  <video src=\"https://www.w3school.com.cn/i/video/shanghai.mp4#t=1.2\"></video>\r\n  <video src=\"https://www.w3school.com.cn/i/video/shanghai.mp4#t=2.2\"></video>\r\n  <video src=\"https://www.w3school.com.cn/i/video/shanghai.mp4#t=3.5\"></video>\r\n</div>\r\n\r\n<!-- 本地地址 -->\r\n<div>\r\n  <video src=\"blob:file:///123a3041-4ab9-4db8-adb7-56c46f3b156e#t=1.2\"></video>\r\n  <video src=\"blob:file:///123a3041-4ab9-4db8-adb7-56c46f3b156e#t=2.2\"></video>\r\n  <video src=\"blob:file:///123a3041-4ab9-4db8-adb7-56c46f3b156e#t=3.5\"></video>\r\n</div>\r\n\r\n<!-- 获取blob url -->\r\n<script>\r\n  fetch('https://www.w3school.com.cn/i/video/shanghai.mp4').then(res => res.blob()).then(blob => {\r\n    const blobUrl = URL.createObjectURL(blob);\r\n    console.log(blobUrl);\r\n  })\r\n</script>\r\n```\r\n\r\n到此就可以渲染出指定时刻的图片。就这？是的，没错，就这。\r\n\r\n### 优点\r\n\r\n- 快\r\n- 简单\r\n\r\n### 缺点\r\n\r\n- 每一张图实际是一个video，会导致资源重复请求，视频文件过大，图片过多，网络压力较大。\r\n- 请求网络地址进而转换成本地地址，虽然可以解决并发导致的网络压力，但是如果文件过大，首次加载依旧需要消耗比较长的时间。\r\n\r\n### 总结\r\n\r\n具体使用什么方式，还需根据业务需求决定。\r\n\r\n> 参考文档：https://www.w3.org/TR/media-frags/#media-fragment-syntax\r\n","author":"z0ffy","reactions":{"url":"https://api.github.com/repos/z0ffy/z0ffy.github.io/issues/14/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"labels":["published","前端"]},{"id":11,"title":"vite plugin javascript obfuscator","created_at":"2024-10-25T03:29:18Z","updated_at":"2024-10-28T07:06:49Z","content":"# 适用于Vite环境的JavaScript混淆插件\r\n\r\n>仓库地址：[vite-plugin-bundle-obfuscator](https://github.com/z0ffy/vite-plugin-bundle-obfuscator)\r\n\r\n## ⭐️ 特性\r\n\r\n- ⚡  支持Vite项目中的JavaScript混淆。\r\n- ⚙️ 可定制的混淆器选项，以满足您的需求。\r\n- 🛡️ 自动排除node_modules。\r\n- 🚀 多线程支持，以获得更好的性能（强烈建议开启）。\r\n\r\n## ⚠️ 注意\r\n\r\n- 如果混淆选项stringArray为true。\r\n    - 您的结果可能会丢失一些捆绑包（在__vite__mapDeps数组中）。\r\n    - 我正在寻找一个准确的案例。\r\n- 如果打包过程中出现内存溢出。修改打包命令为：cross-env NODE_OPTIONS=--max-old-space-size=8192 VITE_CJS_IGNORE_WARNING=true vite build，其中 max-old-space-size 根据机器配置自行设置。\r\n\r\n## 📦 安装\r\n\r\n```bash\r\n# 使用npm\r\nnpm install vite-plugin-bundle-obfuscator -D\r\n\r\n# 使用pnpm\r\npnpm add vite-plugin-bundle-obfuscator -D\r\n\r\n# 使用yarn\r\nyarn add vite-plugin-bundle-obfuscator -D\r\n```\r\n\r\n## 👨‍💻 使用\r\n\r\n1. 使用您首选的软件包管理器安装插件。\r\n2. 在vite.config.js中注册插件。\r\n3. 自定义混淆器配置或使用默认选项。\r\n\r\n示例:\r\n\r\n```javascript\r\nimport vitePluginBundleObfuscator from 'vite-plugin-bundle-obfuscator';\r\n\r\nconst defaultObfuscatorConfig = {\r\n  excludes: [],\r\n  enable: true,\r\n  log: true,\r\n  autoExcludeNodeModules: false,\r\n  threadPool: false,\r\n  options: {\r\n    compact: true,\r\n    controlFlowFlattening: true,\r\n    controlFlowFlatteningThreshold: 1,\r\n    deadCodeInjection: false,\r\n    debugProtection: false,\r\n    debugProtectionInterval: 0,\r\n    disableConsoleOutput: false,\r\n    identifierNamesGenerator: 'hexadecimal',\r\n    log: false,\r\n    numbersToExpressions: false,\r\n    renameGlobals: false,\r\n    selfDefending: true,\r\n    simplify: true,\r\n    splitStrings: false,\r\n    stringArray: false,\r\n    stringArrayCallsTransform: false,\r\n    stringArrayCallsTransformThreshold: 0.5,\r\n    stringArrayEncoding: [],\r\n    stringArrayIndexShift: true,\r\n    stringArrayRotate: true,\r\n    stringArrayShuffle: true,\r\n    stringArrayWrappersCount: 1,\r\n    stringArrayWrappersChainedCalls: true,\r\n    stringArrayWrappersParametersMaxCount: 2,\r\n    stringArrayWrappersType: 'variable',\r\n    stringArrayThreshold: 0.75,\r\n    unicodeEscapeSequence: false,\r\n  }\r\n};\r\n\r\nexport default {\r\n  plugins: [\r\n    // vitePluginBundleObfuscator()\r\n    vitePluginBundleObfuscator(defaultObfuscatorConfig)\r\n  ]\r\n};\r\n```\r\n","author":"z0ffy","reactions":{"url":"https://api.github.com/repos/z0ffy/z0ffy.github.io/issues/11/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"labels":["published","前端"]}]},"__N_SSG":true}